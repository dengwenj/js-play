/**
 * 闭包的作用：
 *  使用函数内部的变量在函数执行完后，仍然存活在内存中
 *  让函数外部可以操作(读写)到函数内部的数据
 * 
 * 函数执行完后，函数内部声明的局部变量是否存在？一般不存在，存在于闭包中的变量才可能(有引用指向，没引用指向也不存在)存在
 * 在函数外部能直接访问函数内部的局部变量？不能，但可以通过闭包让外部操作它
 */
function foo() {
  let a = 1

  return function () {
    console.log(++a)
  }
}

// 有引用指向这个函数对象，这个函数才不是垃圾对象，没指向也会被释放
const bar = foo()
bar() // 2
bar() // 3
bar() // 4
